{"ast":null,"code":"import _regeneratorRuntime from\"/Users/alexandrach/Projects/tresnutye2021/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/alexandrach/Projects/tresnutye2021/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{SET_SHOP_PAGE,VERIFY_CODE_SUCCESS,VERIFY_CODE_FAIL,CODE_REQUEST_SUCCESS,UPDATE_USER_SUCCESS,EDIT_USER_INFO,SET_LOADER,UPDATE_FAILED,QUIT_ACCOUNT,OPEN_FORM,OPEN_SCANER,SET_SPONSORY_PAGE,SET_SCANER_FORM,SET_CHECKS,SET_CHECKS_FAILED,CODE_REQUEST_FAILED,SHOW_CHECK_LIST,SET_WINNERS_LIST,SET_WINNERS_LIST_FAILED,SET_SHOP}from'./actionTypes';import API from\"../utils/API\";// Открыть страницу с картой\nexport var setShopPage=function setShopPage(action){return{type:SET_SHOP_PAGE,payload:action};};// Открыть страницу с картой\nexport var selectShop=function selectShop(action){return{type:SET_SHOP,payload:action};};// Ввод чека в сканере вручную\nexport var setScanerForm=function setScanerForm(action){return{type:SET_SCANER_FORM,payload:action};};// Открыть страницу товаров-спонсоров\nexport var setSponsoryPage=function setSponsoryPage(action){return{type:SET_SPONSORY_PAGE,payload:action};};// ВЫЗВАТЬ ФОРМУ\nexport var setForm=function setForm(action){return{type:OPEN_FORM,payload:action};};// Вызвать сканер\nexport var openScaner=function openScaner(action){return{type:OPEN_SCANER,payload:action};};// Если есть активная сессия и юзер уже залогинен\nexport var handleCheckToken=function handleCheckToken(token){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return API.get(\"/profile\",{headers:{\"Authorization\":\"Bearer \".concat(token)}}).then(function(response){var _response$data$data=response.data.data,first_name=_response$data$data.first_name,last_name=_response$data$data.last_name,email=_response$data$data.email,birthday=_response$data$data.birthday,region=_response$data$data.region,agreement=_response$data$data.agreement;dispatch({type:VERIFY_CODE_SUCCESS,payload:{userName:first_name,userLastName:last_name,userEmail:email,userBirthDate:birthday,confirmedRules:agreement,region:region,token:token}});dispatch(GetAllChecks(token));},function(error){dispatch({type:VERIFY_CODE_FAIL,payload:error.message});});case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};// Выйти из аккаунта\nexport var quitAccount=function quitAccount(){return{type:QUIT_ACCOUNT};};// Отправить код на номер телефона\nexport var handleSendCode=function handleSendCode(userPhone){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return API.post(\"/login_sms\",{phone:userPhone}).then(function(response){dispatch({type:CODE_REQUEST_SUCCESS,payload:response.data.data});},function(error){dispatch({type:CODE_REQUEST_FAILED,payload:'Не удалось отправить код. Проверьте введенный номер'});});case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};// Проверка кода, который ввели на сайте с тем, который прслали на телефон\nexport var handleCheckCode=function handleCheckCode(userPhone,userCode){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return API.post(\"/sms\",{phone:userPhone,confirm_code:userCode}).then(function(response){var jsR=response;var _jsR$data=jsR.data,token=_jsR$data.token,message=_jsR$data.message,success=_jsR$data.success;},function(error){dispatch({type:VERIFY_CODE_FAIL,payload:'Неверный код подтверждения'});});case 2:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};// По нажатию на кнопку Редактировать\nexport var editUserInfo=function editUserInfo(action){return{type:EDIT_USER_INFO,payload:action};};// Обновить данные юзера\nexport var handleUpdateUser=function handleUpdateUser(userData,token){var name=userData.name,lastName=userData.lastName,email=userData.email,phone=userData.phone,region=userData.region;return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return API.post(\"/profile/update\",{first_name:name,last_name:lastName,email:email,region:region},{headers:{\"Authorization\":\"Bearer \".concat(token)}}).then(function(response){dispatch({type:UPDATE_USER_SUCCESS,payload:{user_name:name,user_last_name:lastName,user_email:email,user_city:region}});dispatch(editUserInfo(false));},function(error){dispatch({type:UPDATE_FAILED,payload:error.message});});case 2:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export var loading=function loading(action){return{type:SET_LOADER,payload:action};};// Получить мои чеки с данными\nexport var GetAllChecks=function GetAllChecks(token){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return API.get(\"/checks\",{headers:{\"Authorization\":\"Bearer \".concat(token)}}).then(function(response){dispatch({type:SET_CHECKS,payload:response.data.data});},function(error){dispatch({type:SET_CHECKS_FAILED,payload:'Oшибка получения данных. Попробуйте позже'});});case 2:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x5){return _ref5.apply(this,arguments);};}();};export var sendCheck=function sendCheck(token,data){var date=data.date,fn=data.fn,fp=data.fp,doc_number=data.doc_number;return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return API.post(\"/checks\",{date:date,fn:fn,fp:fp,doc_number:doc_number},{headers:{\"Authorization\":\"Bearer \".concat(token)}}).then(function(response){if(response.data.success){dispatch({message:response.data.message,name:\"Чек принят\"});}else{dispatch({message:response.data.message,name:\"Чек не принят\"});}},function(error){dispatch({message:\"Qr-код, который вы сканируете, не прошел валидацию\",name:\"Чек не принят\"});});case 2:case\"end\":return _context6.stop();}}},_callee6);}));return function(_x6){return _ref6.apply(this,arguments);};}();};export var showCheckList=function showCheckList(action){return{type:SHOW_CHECK_LIST,payload:action};};// отправить данные чека\nexport var getWinners=function getWinners(){return/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch){return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return API.get(\"/winners\",{}).then(function(response){dispatch({type:SET_WINNERS_LIST,payload:response.data});},function(error){dispatch({type:SET_WINNERS_LIST_FAILED,payload:'Oшибка получения данных. Попробуйте позже'});});case 2:case\"end\":return _context7.stop();}}},_callee7);}));return function(_x7){return _ref7.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/alexandrach/Projects/tresnutye2021/src/store/actions.js"],"names":["SET_SHOP_PAGE","VERIFY_CODE_SUCCESS","VERIFY_CODE_FAIL","CODE_REQUEST_SUCCESS","UPDATE_USER_SUCCESS","EDIT_USER_INFO","SET_LOADER","UPDATE_FAILED","QUIT_ACCOUNT","OPEN_FORM","OPEN_SCANER","SET_SPONSORY_PAGE","SET_SCANER_FORM","SET_CHECKS","SET_CHECKS_FAILED","CODE_REQUEST_FAILED","SHOW_CHECK_LIST","SET_WINNERS_LIST","SET_WINNERS_LIST_FAILED","SET_SHOP","API","setShopPage","action","type","payload","selectShop","setScanerForm","setSponsoryPage","setForm","openScaner","handleCheckToken","token","dispatch","get","headers","then","response","data","first_name","last_name","email","birthday","region","agreement","userName","userLastName","userEmail","userBirthDate","confirmedRules","GetAllChecks","error","message","quitAccount","handleSendCode","userPhone","post","phone","handleCheckCode","userCode","confirm_code","jsR","success","editUserInfo","handleUpdateUser","userData","name","lastName","user_name","user_last_name","user_email","user_city","loading","sendCheck","date","fn","fp","doc_number","showCheckList","getWinners"],"mappings":"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","sourcesContent":["import {\n    SET_SHOP_PAGE,\n    VERIFY_CODE_SUCCESS,\n    VERIFY_CODE_FAIL,\n    CODE_REQUEST_SUCCESS,\n    UPDATE_USER_SUCCESS,\n    EDIT_USER_INFO,\n    SET_LOADER,\n    UPDATE_FAILED,\n    QUIT_ACCOUNT,\n    OPEN_FORM,\n    OPEN_SCANER,\n    SET_SPONSORY_PAGE,\n    SET_SCANER_FORM,\n    SET_CHECKS,\n    SET_CHECKS_FAILED,\n    CODE_REQUEST_FAILED,\n    SHOW_CHECK_LIST,\n    SET_WINNERS_LIST,\n    SET_WINNERS_LIST_FAILED,\n    SET_SHOP\n} from './actionTypes'\nimport API from \"../utils/API\";\n\n// Открыть страницу с картой\nexport const setShopPage = (action) => ({\n    type: SET_SHOP_PAGE,\n    payload: action\n})\n\n// Открыть страницу с картой\nexport const selectShop = (action) => ({\n    type: SET_SHOP,\n    payload: action\n})\n\n// Ввод чека в сканере вручную\nexport const setScanerForm = (action) => ({\n    type: SET_SCANER_FORM,\n    payload: action\n})\n\n// Открыть страницу товаров-спонсоров\nexport const setSponsoryPage = (action) => ({\n    type: SET_SPONSORY_PAGE,\n    payload: action\n})\n\n\n// ВЫЗВАТЬ ФОРМУ\nexport const setForm = (action) => ({\n    type: OPEN_FORM,\n    payload: action\n})\n\n// Вызвать сканер\nexport const openScaner = action => ({\n    type: OPEN_SCANER,\n    payload: action\n})\n\n\n// Если есть активная сессия и юзер уже залогинен\nexport const handleCheckToken = (token) => {\n\n    return async dispatch => {\n        await API.get(\n            \"/profile\",\n            { headers: { \"Authorization\": `Bearer ${token}` } },\n        )\n            .then(\n                (response) => {\n                    const { first_name, last_name, email, birthday, region, agreement } = response.data.data\n                    dispatch({\n                        type: VERIFY_CODE_SUCCESS,\n                        payload: {\n                            userName: first_name,\n                            userLastName: last_name,\n                            userEmail: email,\n                            userBirthDate: birthday,\n                            confirmedRules: agreement,\n                            region: region,\n                            token: token\n                        }\n                    })\n                    dispatch(GetAllChecks(token))\n                },\n                (error) => {\n                    dispatch({\n                        type: VERIFY_CODE_FAIL,\n                        payload: error.message\n                    })\n                })\n    }\n}\n\n// Выйти из аккаунта\nexport const quitAccount = () => ({\n    type: QUIT_ACCOUNT\n})\n\n\n// Отправить код на номер телефона\nexport const handleSendCode = userPhone => {\n    return async dispatch => {\n        await API.post(\"/login_sms\", {\n            phone: userPhone\n        })\n            .then(\n                (response) => {\n                    dispatch({\n                        type: CODE_REQUEST_SUCCESS,\n                        payload: response.data.data\n                    })\n                },\n                (error) => {\n                    dispatch({\n                        type: CODE_REQUEST_FAILED,\n                        payload: 'Не удалось отправить код. Проверьте введенный номер'\n                    })\n                }\n            );\n\n    }\n}\n\n// Проверка кода, который ввели на сайте с тем, который прслали на телефон\nexport const handleCheckCode = (userPhone, userCode) => {\n    return async dispatch => {\n\n        await API.post(\"/sms\", {\n            phone: userPhone,\n            confirm_code: userCode\n        })\n            .then(\n                (response) => {\n                    let jsR = response\n                    const { token, message, success } = jsR.data\n                },\n                (error) => {\n                    dispatch({\n                        type: VERIFY_CODE_FAIL,\n                        payload: 'Неверный код подтверждения'\n                    })\n                }\n            );\n\n\n\n    }\n}\n\n// По нажатию на кнопку Редактировать\nexport const editUserInfo = (action) => ({\n    type: EDIT_USER_INFO,\n    payload: action\n})\n\n\n// Обновить данные юзера\nexport const handleUpdateUser = (userData, token) => {\n    const { name,\n        lastName,\n        email,\n        phone,\n        region } = userData\n\n    return async dispatch => {\n        await API.post(\"/profile/update\",\n            {\n                first_name: name,\n                last_name: lastName,\n                email: email,\n                region: region,\n            },\n            {\n                headers:\n                    { \"Authorization\": `Bearer ${token}` }\n            })\n            .then(\n                (response) => {\n                    dispatch({\n                        type: UPDATE_USER_SUCCESS,\n                        payload: {\n                            user_name: name,\n                            user_last_name: lastName,\n                            user_email: email,\n                            user_city: region,\n\n                        }\n                    })\n                    dispatch(editUserInfo(false))\n                },\n                (error) => {\n                    dispatch({\n                        type: UPDATE_FAILED,\n                        payload: error.message\n                    })\n                }\n            )\n\n    }\n}\n\n\nexport const loading = (action) => ({\n    type: SET_LOADER,\n    payload: action\n})\n\n\n// Получить мои чеки с данными\nexport const GetAllChecks = (token) => {\n    return async dispatch => {\n        await API.get(\"/checks\", {\n            headers:\n                { \"Authorization\": `Bearer ${token}` }\n        })\n            .then(\n                (response) => {\n                    dispatch({\n                        type: SET_CHECKS,\n                        payload: response.data.data\n                    })\n                },\n                (error) => {\n                    dispatch({\n                        type: SET_CHECKS_FAILED,\n                        payload: 'Oшибка получения данных. Попробуйте позже'\n                    })\n                }\n            );\n\n    }\n}\n\nexport const sendCheck = (token, data) => {\n    const { date, fn, fp, doc_number } = data\n    return async dispatch => {\n        await API.post(\"/checks\", {\n            date,\n            fn,\n            fp,\n            doc_number,\n        }, { headers: { \"Authorization\": `Bearer ${token}` } })\n            .then(\n                (response) => {\n                    if (response.data.success) {\n                        dispatch({\n                            message: response.data.message,\n                            name: \"Чек принят\",\n                        });\n                    }\n                    else {\n                        dispatch({\n                            message: response.data.message,\n                            name: \"Чек не принят\",\n                        });\n                    }\n                },\n                (error) => {\n                    dispatch({\n                        message: \"Qr-код, который вы сканируете, не прошел валидацию\",\n                        name: \"Чек не принят\",\n                    });\n                }\n            );\n\n    }\n}\nexport const showCheckList = action => ({\n    type: SHOW_CHECK_LIST,\n    payload: action\n})\n\n\n// отправить данные чека\nexport const getWinners = () => {\n    return async dispatch => {\n        await API.get(\"/winners\", {})\n            .then(\n                (response) => {\n\n                    dispatch({\n                        type: SET_WINNERS_LIST,\n                        payload: response.data\n                    })\n\n                },\n                (error) => {\n                    dispatch({\n                        type: SET_WINNERS_LIST_FAILED,\n                        payload: 'Oшибка получения данных. Попробуйте позже'\n                    })\n                }\n            );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}