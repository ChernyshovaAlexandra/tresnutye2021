{"ast":null,"code":"/*!\n * @pixi/filter-drop-shadow - v4.1.5\n * Compiled Wed, 29 Sep 2021 14:05:57 UTC\n *\n * @pixi/filter-drop-shadow is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { KawaseBlurFilter } from '@pixi/filter-kawase-blur';\nimport { Filter } from '@pixi/core';\nimport { settings } from '@pixi/settings';\nimport { DEG_TO_RAD, Point } from '@pixi/math';\nimport { rgb2hex, hex2rgb } from '@pixi/utils';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar _extendStatics = function extendStatics(d, b) {\n  _extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (Object.prototype.hasOwnProperty.call(b, p)) {\n        d[p] = b[p];\n      }\n    }\n  };\n\n  return _extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  _extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar _assign = function __assign() {\n  _assign = Object.assign || function __assign(t) {\n    var arguments$1 = arguments;\n\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments$1[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) {\n          t[p] = s[p];\n        }\n      }\n    }\n\n    return t;\n  };\n\n  return _assign.apply(this, arguments);\n};\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\nvar fragment = \"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform float alpha;\\nuniform vec3 color;\\n\\nuniform vec2 shift;\\nuniform vec4 inputSize;\\n\\nvoid main(void){\\n    vec4 sample = texture2D(uSampler, vTextureCoord - shift * inputSize.zw);\\n\\n    // Premultiply alpha\\n    sample.rgb = color.rgb * sample.a;\\n\\n    // alpha user alpha\\n    sample *= alpha;\\n\\n    gl_FragColor = sample;\\n}\";\n/**\n * Drop shadow filter.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/drop-shadow.png)\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-drop-shadow|@pixi/filter-drop-shadow}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n */\n\nvar DropShadowFilter =\n/** @class */\nfunction (_super) {\n  __extends(DropShadowFilter, _super);\n  /**\n   * @param {object} [options] - Filter options\n   * @param {number} [options.rotation=45] - The angle of the shadow in degrees.\n   * @param {number} [options.distance=5] - Distance of shadow\n   * @param {number} [options.color=0x000000] - Color of the shadow\n   * @param {number} [options.alpha=0.5] - Alpha of the shadow\n   * @param {boolean} [options.shadowOnly=false] - Whether render shadow only\n   * @param {number} [options.blur=2] - Sets the strength of the Blur properties simultaneously\n   * @param {number} [options.quality=3] - The quality of the Blur filter.\n   * @param {number[]} [options.kernels=null] - The kernels of the Blur filter.\n   * @param {number|number[]|PIXI.Point} [options.pixelSize=1] - the pixelSize of the Blur filter.\n   * @param {number} [options.resolution=PIXI.settings.FILTER_RESOLUTION] - The resolution of the Blur filter.\n   */\n\n\n  function DropShadowFilter(options) {\n    var _this = _super.call(this) || this;\n    /** Angle of the shadow in degrees. */\n\n\n    _this.angle = 45;\n    _this._distance = 5;\n    _this._resolution = settings.FILTER_RESOLUTION;\n    var opt = options ? _assign(_assign({}, DropShadowFilter.defaults), options) : DropShadowFilter.defaults;\n    var kernels = opt.kernels,\n        blur = opt.blur,\n        quality = opt.quality,\n        pixelSize = opt.pixelSize,\n        resolution = opt.resolution;\n    _this._tintFilter = new Filter(vertex, fragment);\n    _this._tintFilter.uniforms.color = new Float32Array(4);\n    _this._tintFilter.uniforms.shift = new Point();\n    _this._tintFilter.resolution = resolution;\n    _this._blurFilter = kernels ? new KawaseBlurFilter(kernels) : new KawaseBlurFilter(blur, quality);\n    _this.pixelSize = pixelSize;\n    _this.resolution = resolution;\n    var shadowOnly = opt.shadowOnly,\n        rotation = opt.rotation,\n        distance = opt.distance,\n        alpha = opt.alpha,\n        color = opt.color;\n    _this.shadowOnly = shadowOnly;\n    _this.rotation = rotation;\n    _this.distance = distance;\n    _this.alpha = alpha;\n    _this.color = color;\n\n    _this._updatePadding();\n\n    return _this;\n  }\n\n  DropShadowFilter.prototype.apply = function (filterManager, input, output, clear) {\n    var target = filterManager.getFilterTexture();\n\n    this._tintFilter.apply(filterManager, input, target, 1);\n\n    this._blurFilter.apply(filterManager, target, output, clear);\n\n    if (this.shadowOnly !== true) {\n      filterManager.applyFilter(this, input, output, 0);\n    }\n\n    filterManager.returnFilterTexture(target);\n  };\n  /**\n   * Recalculate the proper padding amount.\n   * @private\n   */\n\n\n  DropShadowFilter.prototype._updatePadding = function () {\n    this.padding = this.distance + this.blur * 2;\n  };\n  /**\n   * Update the transform matrix of offset angle.\n   * @private\n   */\n\n\n  DropShadowFilter.prototype._updateShift = function () {\n    this._tintFilter.uniforms.shift.set(this.distance * Math.cos(this.angle), this.distance * Math.sin(this.angle));\n  };\n\n  Object.defineProperty(DropShadowFilter.prototype, \"resolution\", {\n    /**\n     * The resolution of the filter.\n     * @default PIXI.settings.FILTER_RESOLUTION\n     */\n    get: function get() {\n      return this._resolution;\n    },\n    set: function set(value) {\n      this._resolution = value;\n\n      if (this._tintFilter) {\n        this._tintFilter.resolution = value;\n      }\n\n      if (this._blurFilter) {\n        this._blurFilter.resolution = value;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DropShadowFilter.prototype, \"distance\", {\n    /**\n     * Distance offset of the shadow\n     * @default 5\n     */\n    get: function get() {\n      return this._distance;\n    },\n    set: function set(value) {\n      this._distance = value;\n\n      this._updatePadding();\n\n      this._updateShift();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DropShadowFilter.prototype, \"rotation\", {\n    /**\n     * The angle of the shadow in degrees\n     * @default 2\n     */\n    get: function get() {\n      return this.angle / DEG_TO_RAD;\n    },\n    set: function set(value) {\n      this.angle = value * DEG_TO_RAD;\n\n      this._updateShift();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DropShadowFilter.prototype, \"alpha\", {\n    /**\n     * The alpha of the shadow\n     * @default 1\n     */\n    get: function get() {\n      return this._tintFilter.uniforms.alpha;\n    },\n    set: function set(value) {\n      this._tintFilter.uniforms.alpha = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DropShadowFilter.prototype, \"color\", {\n    /**\n     * The color of the shadow.\n     * @default 0x000000\n     */\n    get: function get() {\n      return rgb2hex(this._tintFilter.uniforms.color);\n    },\n    set: function set(value) {\n      hex2rgb(value, this._tintFilter.uniforms.color);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DropShadowFilter.prototype, \"kernels\", {\n    /**\n     * Sets the kernels of the Blur Filter\n     */\n    get: function get() {\n      return this._blurFilter.kernels;\n    },\n    set: function set(value) {\n      this._blurFilter.kernels = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DropShadowFilter.prototype, \"blur\", {\n    /**\n     * The blur of the shadow\n     * @default 2\n     */\n    get: function get() {\n      return this._blurFilter.blur;\n    },\n    set: function set(value) {\n      this._blurFilter.blur = value;\n\n      this._updatePadding();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DropShadowFilter.prototype, \"quality\", {\n    /**\n     * Sets the quality of the Blur Filter\n     * @default 4\n     */\n    get: function get() {\n      return this._blurFilter.quality;\n    },\n    set: function set(value) {\n      this._blurFilter.quality = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DropShadowFilter.prototype, \"pixelSize\", {\n    /**\n     * Sets the pixelSize of the Kawase Blur filter\n     *\n     * @member {number|number[]|PIXI.Point}\n     * @default 1\n     */\n    get: function get() {\n      return this._blurFilter.pixelSize;\n    },\n    set: function set(value) {\n      this._blurFilter.pixelSize = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** Default constructor options. */\n\n  DropShadowFilter.defaults = {\n    rotation: 45,\n    distance: 5,\n    color: 0x000000,\n    alpha: 0.5,\n    shadowOnly: false,\n    kernels: null,\n    blur: 2,\n    quality: 3,\n    pixelSize: 1,\n    resolution: settings.FILTER_RESOLUTION\n  };\n  return DropShadowFilter;\n}(Filter);\n\nexport { DropShadowFilter };","map":{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../drop-shadow/src/DropShadowFilter.ts"],"names":["arguments"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { KawaseBlurFilter } from '@pixi/filter-kawase-blur';\nimport { vertex } from '@tools/fragments';\nimport fragment from './dropshadow.frag';\nimport { Filter } from '@pixi/core';\nimport { settings } from '@pixi/settings';\nimport { DEG_TO_RAD, Point } from '@pixi/math';\nimport { rgb2hex, hex2rgb } from '@pixi/utils';\nimport type { FilterSystem, RenderTexture } from '@pixi/core';\nimport type { CLEAR_MODES } from '@pixi/constants';\nimport type { IPoint } from '@pixi/math';\n\ntype PixelSizeValue = number | number[] | IPoint;\n\ninterface DropShadowFilterOptions {\n    rotation: number;\n    distance: number;\n    color: number;\n    alpha: number;\n    shadowOnly: boolean;\n    blur: number;\n    quality: number;\n    kernels: number[] | null;\n    pixelSize: PixelSizeValue;\n    resolution: number;\n}\n\n/**\n * Drop shadow filter.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/drop-shadow.png)\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-drop-shadow|@pixi/filter-drop-shadow}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n */\nclass DropShadowFilter extends Filter\n{\n    /** Default constructor options. */\n    public static readonly defaults: DropShadowFilterOptions = {\n        rotation: 45,\n        distance: 5,\n        color: 0x000000,\n        alpha: 0.5,\n        shadowOnly: false,\n        kernels: null,\n        blur: 2,\n        quality: 3,\n        pixelSize: 1,\n        resolution: settings.FILTER_RESOLUTION,\n    };\n\n    /** Hide the contents, only show the shadow. */\n    public shadowOnly: boolean;\n\n    /** Angle of the shadow in degrees. */\n    public angle = 45;\n\n    private _distance = 5;\n    private _tintFilter: Filter;\n    private _blurFilter: KawaseBlurFilter;\n    protected _resolution: number = settings.FILTER_RESOLUTION;\n\n    /**\n     * @param {object} [options] - Filter options\n     * @param {number} [options.rotation=45] - The angle of the shadow in degrees.\n     * @param {number} [options.distance=5] - Distance of shadow\n     * @param {number} [options.color=0x000000] - Color of the shadow\n     * @param {number} [options.alpha=0.5] - Alpha of the shadow\n     * @param {boolean} [options.shadowOnly=false] - Whether render shadow only\n     * @param {number} [options.blur=2] - Sets the strength of the Blur properties simultaneously\n     * @param {number} [options.quality=3] - The quality of the Blur filter.\n     * @param {number[]} [options.kernels=null] - The kernels of the Blur filter.\n     * @param {number|number[]|PIXI.Point} [options.pixelSize=1] - the pixelSize of the Blur filter.\n     * @param {number} [options.resolution=PIXI.settings.FILTER_RESOLUTION] - The resolution of the Blur filter.\n     */\n    constructor(options?: Partial<DropShadowFilterOptions>)\n    {\n        super();\n\n        const opt: DropShadowFilterOptions = options\n            ? { ...DropShadowFilter.defaults, ...options }\n            : DropShadowFilter.defaults;\n\n        const { kernels, blur, quality, pixelSize, resolution } = opt;\n\n        this._tintFilter = new Filter(vertex, fragment);\n        this._tintFilter.uniforms.color = new Float32Array(4);\n        this._tintFilter.uniforms.shift = new Point();\n        this._tintFilter.resolution = resolution;\n        this._blurFilter = kernels\n            ? new KawaseBlurFilter(kernels)\n            : new KawaseBlurFilter(blur, quality);\n\n        this.pixelSize = pixelSize;\n        this.resolution = resolution;\n\n        const { shadowOnly, rotation, distance, alpha, color } = opt;\n\n        this.shadowOnly = shadowOnly;\n        this.rotation = rotation;\n        this.distance = distance;\n        this.alpha = alpha;\n        this.color = color;\n\n        this._updatePadding();\n    }\n\n    apply(filterManager: FilterSystem, input: RenderTexture, output: RenderTexture, clear: CLEAR_MODES): void\n    {\n        const target = filterManager.getFilterTexture();\n\n        this._tintFilter.apply(filterManager, input, target, 1);\n        this._blurFilter.apply(filterManager, target, output, clear);\n\n        if (this.shadowOnly !== true)\n        {\n            filterManager.applyFilter(this, input, output, 0);\n        }\n\n        filterManager.returnFilterTexture(target);\n    }\n\n    /**\n     * Recalculate the proper padding amount.\n     * @private\n     */\n    private _updatePadding()\n    {\n        this.padding = this.distance + (this.blur * 2);\n    }\n\n    /**\n     * Update the transform matrix of offset angle.\n     * @private\n     */\n    private _updateShift()\n    {\n        this._tintFilter.uniforms.shift.set(\n            this.distance * Math.cos(this.angle),\n            this.distance * Math.sin(this.angle),\n        );\n    }\n\n    /**\n     * The resolution of the filter.\n     * @default PIXI.settings.FILTER_RESOLUTION\n     */\n    get resolution(): number\n    {\n        return this._resolution;\n    }\n    set resolution(value: number)\n    {\n        this._resolution = value;\n\n        if (this._tintFilter)\n        {\n            this._tintFilter.resolution = value;\n        }\n        if (this._blurFilter)\n        {\n            this._blurFilter.resolution = value;\n        }\n    }\n\n    /**\n     * Distance offset of the shadow\n     * @default 5\n     */\n    get distance(): number\n    {\n        return this._distance;\n    }\n    set distance(value: number)\n    {\n        this._distance = value;\n        this._updatePadding();\n        this._updateShift();\n    }\n\n    /**\n     * The angle of the shadow in degrees\n     * @default 2\n     */\n    get rotation(): number\n    {\n        return this.angle / DEG_TO_RAD;\n    }\n    set rotation(value: number)\n    {\n        this.angle = value * DEG_TO_RAD;\n        this._updateShift();\n    }\n\n    /**\n     * The alpha of the shadow\n     * @default 1\n     */\n    get alpha(): number\n    {\n        return this._tintFilter.uniforms.alpha;\n    }\n    set alpha(value: number)\n    {\n        this._tintFilter.uniforms.alpha = value;\n    }\n\n    /**\n     * The color of the shadow.\n     * @default 0x000000\n     */\n    get color(): number\n    {\n        return rgb2hex(this._tintFilter.uniforms.color);\n    }\n    set color(value: number)\n    {\n        hex2rgb(value, this._tintFilter.uniforms.color);\n    }\n\n    /**\n     * Sets the kernels of the Blur Filter\n     */\n    get kernels(): number[]\n    {\n        return this._blurFilter.kernels;\n    }\n    set kernels(value: number[])\n    {\n        this._blurFilter.kernels = value;\n    }\n\n    /**\n     * The blur of the shadow\n     * @default 2\n     */\n    get blur(): number\n    {\n        return this._blurFilter.blur;\n    }\n    set blur(value: number)\n    {\n        this._blurFilter.blur = value;\n        this._updatePadding();\n    }\n\n    /**\n     * Sets the quality of the Blur Filter\n     * @default 4\n     */\n    get quality(): number\n    {\n        return this._blurFilter.quality;\n    }\n    set quality(value: number)\n    {\n        this._blurFilter.quality = value;\n    }\n\n    /**\n     * Sets the pixelSize of the Kawase Blur filter\n     *\n     * @member {number|number[]|PIXI.Point}\n     * @default 1\n     */\n    get pixelSize(): PixelSizeValue\n    {\n        return this._blurFilter.pixelSize;\n    }\n    set pixelSize(value: PixelSizeValue)\n    {\n        this._blurFilter.pixelSize = value;\n    }\n}\n\nexport { DropShadowFilter };\nexport type { DropShadowFilterOptions };\n"]},"metadata":{},"sourceType":"module"}