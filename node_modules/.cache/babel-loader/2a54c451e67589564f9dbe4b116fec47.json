{"ast":null,"code":"var hash = {};\nvar cache = [];\n\nvar add = function add(url) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!hash[url]) {\n    hash[url] = new Image();\n\n    if (options.crossOrigin) {\n      hash[url].crossOrigin = options.crossOrigin;\n    }\n\n    hash[url].src = url;\n    cache.push(hash[url]);\n  }\n\n  return hash[url];\n};\n\nvar get = function get(url, options) {\n  return add(url, options);\n};\n\nvar stuff = function stuff(urls, options) {\n  if (urls.length > 0) {\n    urls.map(function (url) {\n      return add(url, options);\n    });\n  }\n};\n\nvar ImageCache = {\n  add: add,\n  stuff: stuff,\n  get: get,\n  hash: hash,\n  cache: cache\n};\nexport default ImageCache;","map":{"version":3,"sources":["/Users/alexandrach/Projects/tresnutye2021/node_modules/react-preload/lib/ImageCache.js"],"names":["hash","cache","add","url","options","Image","crossOrigin","src","push","get","stuff","urls","length","map","ImageCache"],"mappings":"AAAA,IAAMA,IAAI,GAAG,EAAb;AACA,IAAMC,KAAK,GAAG,EAAd;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,GAAD,EAAuB;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;;AAC/B,MAAI,CAACJ,IAAI,CAACG,GAAD,CAAT,EAAgB;AACZH,IAAAA,IAAI,CAACG,GAAD,CAAJ,GAAY,IAAIE,KAAJ,EAAZ;;AAEA,QAAID,OAAO,CAACE,WAAZ,EAAyB;AACrBN,MAAAA,IAAI,CAACG,GAAD,CAAJ,CAAUG,WAAV,GAAwBF,OAAO,CAACE,WAAhC;AACH;;AAEDN,IAAAA,IAAI,CAACG,GAAD,CAAJ,CAAUI,GAAV,GAAgBJ,GAAhB;AAEAF,IAAAA,KAAK,CAACO,IAAN,CAAWR,IAAI,CAACG,GAAD,CAAf;AACH;;AACD,SAAOH,IAAI,CAACG,GAAD,CAAX;AACH,CAbD;;AAeA,IAAMM,GAAG,GAAG,SAANA,GAAM,CAACN,GAAD,EAAMC,OAAN;AAAA,SAAkBF,GAAG,CAACC,GAAD,EAAMC,OAAN,CAArB;AAAA,CAAZ;;AAEA,IAAMM,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD,EAAOP,OAAP,EAAmB;AAC7B,MAAIO,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACjBD,IAAAA,IAAI,CAACE,GAAL,CAAS,UAAAV,GAAG;AAAA,aAAID,GAAG,CAACC,GAAD,EAAMC,OAAN,CAAP;AAAA,KAAZ;AACH;AACJ,CAJD;;AAMA,IAAMU,UAAU,GAAG;AACfZ,EAAAA,GAAG,EAAHA,GADe;AAEfQ,EAAAA,KAAK,EAALA,KAFe;AAGfD,EAAAA,GAAG,EAAHA,GAHe;AAIfT,EAAAA,IAAI,EAAJA,IAJe;AAKfC,EAAAA,KAAK,EAALA;AALe,CAAnB;AAQA,eAAea,UAAf","sourcesContent":["const hash = {};\nconst cache = [];\n\nconst add = (url, options = {}) => {\n    if (!hash[url]) {\n        hash[url] = new Image();\n\n        if (options.crossOrigin) {\n            hash[url].crossOrigin = options.crossOrigin;\n        }\n\n        hash[url].src = url;\n\n        cache.push(hash[url]);\n    }\n    return hash[url];\n};\n\nconst get = (url, options) => add(url, options);\n\nconst stuff = (urls, options) => {\n    if (urls.length > 0) {\n        urls.map(url => add(url, options));\n    }\n};\n\nconst ImageCache = {\n    add,\n    stuff,\n    get,\n    hash,\n    cache\n};\n\nexport default ImageCache;"]},"metadata":{},"sourceType":"module"}